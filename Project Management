// Function for creating a new project
function createProject(name, description, deadline, goals, milestones) {
    // Validate input
    if (name == "" || deadline == "") {
        return "Error: Please fill in all mandatory fields.";
    } else if (!isValidDate(deadline)) {
        return "Error: Invalid date format. Please use YYYY-MM-DD.";
    }
    
    // Create project object
    let project = {
        name: name,
        description: description,
        deadline: deadline,
        goals: goals,
        milestones: milestones,
        tasks: []
    };
    
    // Add project to project list
    projectList.push(project);
    
    // Display confirmation message
    return "Project created successfully.";
}

// Helper function for validating date format
function isValidDate(dateString) {
    let regex = /^\d{4}-\d{2}-\d{2}$/;
    return regex.test(dateString);
}



def add_task_to_project(project_id):
    # get project object from database based on project_id
    project = get_project(project_id)
    
    # display form for creating a new task
    task_name = input("Enter task name: ")
    task_description = input("Enter task description: ")
    assigned_member = input("Enter assigned team member: ")
    deadline = input("Enter deadline: ")
    priority_level = input("Enter priority level (high, medium, low): ")
    
    # validate input
    if not task_name:
        print("Task name cannot be empty")
        return
    if not assigned_member:
        print("Assigned member cannot be empty")
        return
    
    # create new task object with specified details
    task = Task(name=task_name, description=task_description, assigned_member=assigned_member, deadline=deadline, priority_level=priority_level)
    
    # add new task to project's task list
    project.add_task(task)
    
    # save changes to database
    save_changes()
    
    print("New task created successfully!")




